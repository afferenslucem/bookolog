name: CI

on:
  push:
    branches: [ master, develop, tests ]
  release:
    types: [ published ]
    tags:
      - v*


env:
  IMAGE_NAME: client

jobs:
  client-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend.v3

    strategy:
      matrix:
        node-version: [ 14.x, 15.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test:prod

  client-push-image:
    needs: client-tests
    if: github.event_name == 'release'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file frontend.v3/Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PUB }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          echo IMAGE_NAME=client
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID

          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

  server-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
          docker build -t bookolog/tests backend.v2 --file backend.v2/DockerfileTests
          docker run bookolog/tests

  server-push-image:
    needs: server-tests
    if: github.event_name == 'release'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file backend.v2/Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PUB }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          echo IMAGE_NAME=server
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID

          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
